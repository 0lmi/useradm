swagger: '2.0'
info:
  version: '1'
  title: User administration and authentication
  description: |
    An API for user administration and user authentication handling. Intended for use by the web GUI.

basePath: '/api/management/v1/useradm'
host: 'docker.mender.io'
schemes:
  - https

paths:
  /auth/login:
    post:
      summary: Log in to Mender
      description: |
        Accepts user credentials via standard Basic Auth, and returns a
        JWT token to be used for authentication in subsequent requests.
      parameters:
        - name: Authorization
          in: header
          description: |
            Standard Basic Auth header, based on user's credentials.
          required: true
          type: string
      responses:
        200:
          description: |
            Authentication successful - a new JWT is issued and returned.
            The JWT is signed with the API's private key ('RS256' signing algorithm),
            and contains the following standard claims:
            * 'iss' - issuer
            * 'exp' - expiry date
            * 'sub' - unique, autogenerated user ID
            * 'scp' - 'mender.*', allows access to all APIs/methods
          examples:
            application/jwt:
                eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.
                eyJleHAiOjE0NzYxMTkxMzYsImlzcyI6Ik1lbmRlciIsIn
                N1YiI6Ijg1NGIzMTA5LTQ4NjItNGEyNS1hMWZiLWYxMTE2
                MWNlN2E4NCIsInNjcCI6WyJtZW5kZXIuKiJdfQ.
                X7Ief4PhPLlR6mA2wh3G3K0Z2tud0rK1QJesxu52NfICSe
                ARmlujczs-_1YZxMwI0s-HgpXHbXIjaSVK80BjxjAM1rqp
                RGvgqSqG-dU5KmglDpAaTr4VaJci3VFPlVUVTRpI7bfqNM
                nKZtjmOUAGwjvroDUwX1RwayEmms-efGI

        400:
          description: Bad request, see error message for details.
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

  /users/inital:
    post:
      summary: Create the initial Mender user
      description: |
        Creates the initial Mender user, provided that:
        * the users database is empty
        * a valid JWT token is presented (scope: 'mender.users.create.initial')
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued upon login.
        - name: user
          in: body
          description: New user descriptor.
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        201:
          description: Successful response.
          headers:
            Location:
              description: URL of the newly created user.
              type: string
        400:
          description: Bad request, see error message for details.
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

definitions:
  User:
    description: New user descriptor.
    type: object
    properties:
      email:
        description: A unique email address.
        type: string
      password:
        description: Password.
        type: string
    example:
      application/json:
        email: 'user@acme.com'
        password: 'mypass1234'

  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
    example:
      application/json:
        error: "missing Authorization header"
